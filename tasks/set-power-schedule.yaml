- name: Convert power on/off times to seconds
  ansible.builtin.set_fact:
    power_on_seconds: '{{ (power.startup_time.split(":")[0] | int * 3600) + (power.startup_time.split(":")[1] | int * 60) }}'
    power_off_seconds: '{{ (power.shutdown_time.split(":")[0] | int * 3600) + (power.shutdown_time.split(":")[1] | int * 60) }}'

- name: Calculate power on/off time
  ansible.builtin.set_fact:
    sleep_seconds: '{{ (24 * 3600) - (power_off_seconds | int - power_on_seconds | int) }}'
  when: (power_on_seconds | int < power_off_seconds | int)

- name: Calculate power on/off time (past midnight)
  ansible.builtin.set_fact:
    sleep_seconds: '{{ power_on_seconds | int - power_off_seconds | int }}'
  when: (power_on_seconds | int > power_off_seconds | int)

- name: Add to PATH
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:/usr/sbin'
    state: present
  become: true

- name: Set power schedule
  ansible.builtin.cron:
    name: rtcwake
    user: '{{ ansible_settings.ansible_user }}'
    hour: '{{ hardware.power.shutdown_time.split(":")[0] | int }}'
    minute: '{{ hardware.power.shutdown_time.split(":")[1] | int }}'
    # The user that this cron job is assigned to needs passwordless sudo for /usr/sbin/rtcwake
    # The job also needs to run with sudo because rtcwake relies on the motherboard's real time clock (RTC)
    # The default is /dev/rtc0 and /dev components are enumerated at each boot so permission changes won't persist beyond a reboot
    job: 'sudo rtcwake --mode off --seconds {{ sleep_seconds }}'
  become: true
  when: power.schedule_enabled and maintenance.start_time != 'before_shutdown'
