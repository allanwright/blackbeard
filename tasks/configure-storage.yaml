- name: Install storage packages
  ansible.builtin.include_tasks: install-packages.yaml
  vars:
    packages:
      - fuse
      - mergerfs
      - parted
      - samba
      - snapraid
    package_state: present

- name: Install snapraid runner
  ansible.builtin.git:
    repo: https://github.com/Chronial/snapraid-runner.git
    dest: /opt/snapraid-runner
    version: master
  become: true

- name: Get data disk device names from disk ids # noqa: command-instead-of-shell no-changed-when
  ansible.builtin.shell: "lsblk -d -n -o NAME /dev/disk/by-id/{{ item.disk_id }}"
  register: data_disk_device_names_output
  loop: '{{ hardware.disks.data }}'

- name: Create list of data disk device names
  ansible.builtin.set_fact:
    data_disk_device_names: '{{ data_disk_device_names_output.results | map(attribute="stdout") | list }}'

- name: Get parity disk device names from disk ids # noqa: command-instead-of-shell no-changed-when
  ansible.builtin.shell: "lsblk -d -n -o NAME /dev/disk/by-id/{{ item.disk_id }}"
  register: parity_disk_device_names_output
  loop: '{{ hardware.disks.parity }}'

- name: Create list of parity disk device names
  ansible.builtin.set_fact:
    parity_disk_device_names: '{{ parity_disk_device_names_output.results | map(attribute="stdout") | list }}'

- name: Partition disks
  community.general.parted:
    device: '/dev/{{ item }}'
    number: 1
    part_type: primary
    fs_type: ext4
    state: present
  become: true
  loop: '{{ data_disk_device_names + parity_disk_device_names }}'

- name: Create filesystems
  community.general.filesystem:
    fstype: ext4
    dev: '/dev/{{ item }}1'
    state: present
  become: true
  loop: '{{ data_disk_device_names + parity_disk_device_names }}'

- name: Set mount points
  ansible.posix.mount:
    path: '{{ item.mount_point }}'
    src: '/dev/disk/by-id/{{ item.disk_id }}-part1'
    fstype: ext4
    state: mounted
  become: true
  loop: '{{ hardware.disks.data + hardware.disks.parity }}'

- name: Create mergerfs mount point directory # noqa: risky-file-permissions
  ansible.builtin.file:
    path: /mnt/storage
    state: directory
  become: true

- name: Configure mergerfs
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: >
      /mnt/disk*
      /mnt/storage
      fuse.mergerfs defaults,
      nonempty,
      allow_other,
      use_ino,
      cache.files=off,
      moveonenospc=true,
      category.create=mfs,
      dropcacheonclose=true,
      minfreespace=50G,
      fsname=mergerfs 0 0
    state: present
  become: true

- name: Create snapraid configuration
  ansible.builtin.template:
    src: 'config/templates/snapraid.conf.j2'
    dest: '/etc/snapraid.conf'
    mode: '0640'
  become: true

- name: Create snapraid runner configuration
  ansible.builtin.template:
    src: 'config/templates/snapraid-runner.conf.j2'
    dest: '/opt/snapraid-runner/snapraid-runner.conf'
    mode: '0640'
  become: true

- name: Set snapraid runner schedule
  ansible.builtin.cron:
    name: snapraid-runner
    user: '{{ ansible_settings.ansible_user }}'
    hour: '{{ software.scheduled_tasks.snapraid_runner_time.split(":")[0] | int }}'
    minute: '{{ software.scheduled_tasks.snapraid_runner_time.split(":")[1] | int }}'
    # TODO: Add support for stopping and starting containers to the ansible_vars file
    job: >
      cd /opt/docker/arrstack
      && sudo docker compose stop
      && cd /opt/docker/immichstack
      && sudo docker compose stop
      && sudo python3 /opt/snapraid-runner/snapraid-runner.py
      -c /opt/snapraid-runner/snapraid-runner.conf
      && curl -fsS --retry 3 https://hc-ping.com/2219d8b3-908f-4f86-ac34-a9c80a06b72e
      > /dev/null
      && cd /opt/docker/arrstack
      && sudo docker compose start
      && cd /opt/docker/immichstack
      && sudo docker compose start
  become: true
